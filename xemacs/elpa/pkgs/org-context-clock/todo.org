# -*- buffer-read-only: nil; fill-column: 172; -*-
#+CATEGORY: Work
#+STARTUP: overview
#+STARTUP: hidestars
#+TAGS: PERFORCE(4)  BUGZILLA(b) SVN(v) SCMBUG(m) PROJECT(j) STARTED(s
#+TAGS: CVS(i) PHONE(p) INTERNET(i)


* STARTED Work - emacs: Emacs for me.
  :PROPERTIES:
  :EFFORT:   7:00
  :END:
  :LOGBOOK:
  CLOCK: [2017-12-07 Thu 22:53]--[2017-12-20 Wed 23:00] => 312:07
  CLOCK: [2016-09-17 Sat 19:40]--[2016-09-17 Sat 19:41] =>  0:01
  :END:
Yes

** STARTED Tuning my emacs to look like me
   :PROPERTIES:
   :Root:     ~/.xemacs/
   :EFFORT:   7:00
   :ATTACH_DIR_INHERIT: t
   :END:
   :LOGBOOK:
   - Note taken on [2017-12-26 Tue 21:05] \\
     Yes at least one thing got fixed about on change log note basically here timeout
     time required to be greater than the lunching functions own timeout, otherwise
     the timeout function of onchange new timed window also get trigger which result
     into cleanup of new-win.
   CLOCK: [2017-12-26 Tue 20:42]
   CLOCK: [2017-12-26 Tue 17:46]--[2017-12-26 Tue 18:27] =>  0:41
   CLOCK: [2017-12-24 Sun 01:03]--[2017-12-24 Sun 04:10] =>  3:07
   CLOCK: [2017-12-23 Sat 17:31]--[2017-12-23 Sat 18:48] =>  1:17
   CLOCK: [2017-12-23 Sat 02:26]--[2017-12-23 Sat 03:15] =>  0:49
   CLOCK: [2017-12-23 Sat 01:33]--[2017-12-23 Sat 01:38] =>  0:05
   CLOCK: [2017-12-22 Fri 15:22]--[2017-12-22 Fri 22:48] =>  7:26
   CLOCK: [2017-12-22 Fri 04:17]--[2017-12-22 Fri 15:10] => 10:53
   CLOCK: [2017-12-22 Fri 04:06]--[2017-12-22 Fri 04:14] =>  0:08
   CLOCK: [2017-12-22 Fri 01:24]--[2017-12-22 Fri 03:57] =>  2:33
   CLOCK: [2017-12-20 Wed 23:00]--[2017-12-21 Thu 00:07] =>  1:07
   CLOCK: [2017-12-20 Wed 17:16]--[2017-12-20 Wed 17:43] =>  0:27
   CLOCK: [2017-12-20 Wed 16:13]--[2017-12-20 Wed 16:57] =>  0:44
   CLOCK: [2017-12-19 Tue 16:14]--[2017-12-19 Tue 17:07] =>  0:53
   CLOCK: [2017-12-19 Tue 13:21]--[2017-12-19 Tue 13:30] =>  0:09
   CLOCK: [2017-12-18 Mon 18:19]--[2017-12-18 Mon 23:32] =>  5:13
   CLOCK: [2017-12-18 Mon 17:56]--[2017-12-18 Mon 18:13] =>  0:17
   CLOCK: [2017-12-18 Mon 15:28]--[2017-12-18 Mon 15:34] =>  0:06
   CLOCK: [2017-12-18 Mon 02:07]--[2017-12-18 Mon 02:36] =>  0:29
   CLOCK: [2017-12-18 Mon 02:03]--[2017-12-18 Mon 02:04] =>  0:01
   CLOCK: [2017-12-17 Sun 22:51]--[2017-12-17 Sun 23:08] =>  0:17
   CLOCK: [2017-12-16 Sat 18:33]--[2017-12-16 Sat 23:21] =>  4:48
   CLOCK: [2017-12-16 Sat 18:00]--[2017-12-16 Sat 18:01] =>  0:01
   CLOCK: [2017-12-15 Fri 23:11]--[2017-12-15 Fri 23:21] =>  0:10
   CLOCK: [2017-12-15 Fri 21:31]--[2017-12-15 Fri 23:10] =>  1:39
   CLOCK: [2017-12-15 Fri 21:16]--[2017-12-15 Fri 21:26] =>  0:10
   CLOCK: [2017-12-15 Fri 19:55]--[2017-12-15 Fri 19:57] =>  0:02
   CLOCK: [2017-12-15 Fri 19:32]--[2017-12-15 Fri 19:52] =>  0:20
   CLOCK: [2017-12-15 Fri 16:10]--[2017-12-15 Fri 19:30] =>  3:20
   CLOCK: [2017-12-15 Fri 01:57]--[2017-12-15 Fri 02:16] =>  0:19
   - Note taken on [2017-12-14 Thu 14:25] \\
     No change
   CLOCK: [2017-12-14 Thu 20:14]--[2017-12-14 Thu 21:47] =>  1:33
   CLOCK: [2017-12-12 Tue 16:55]--[2017-12-14 Thu 20:13] => 51:18
   CLOCK: [2017-12-12 Tue 12:55]--[2017-12-12 Tue 13:01] =>  0:06
   CLOCK: [2017-12-12 Tue 00:33]--[2017-12-12 Tue 00:59] =>  0:26
   CLOCK: [2017-12-11 Mon 16:07]--[2017-12-11 Mon 23:26] =>  7:19
   CLOCK: [2017-12-10 Sun 20:26]--[2017-12-10 Sun 21:37] =>  1:11
   CLOCK: [2017-12-10 Sun 20:07]--[2017-12-10 Sun 20:09] =>  0:02
   CLOCK: [2017-12-10 Sun 19:48]--[2017-12-10 Sun 20:02] =>  0:14
   CLOCK: [2017-12-10 Sun 19:17]--[2017-12-10 Sun 19:45] =>  0:28
   CLOCK: [2017-12-07 Thu 23:53]--[2017-12-08 Fri 00:15] =>  0:22
   CLOCK: [2017-12-07 Thu 23:25]--[2017-12-07 Thu 23:49] =>  0:24
   CLOCK: [2017-12-07 Thu 23:20]--[2017-12-07 Thu 23:23] =>  0:03
   CLOCK: [2017-12-07 Thu 22:11]--[2017-12-07 Thu 22:35] =>  0:24
   CLOCK: [2017-12-07 Thu 15:22]--[2017-12-07 Thu 22:02] =>  6:40
   CLOCK: [2017-12-07 Thu 00:46]--[2017-12-07 Thu 00:51] =>  0:05
   CLOCK: [2017-12-06 Wed 23:28]--[2017-12-07 Thu 00:23] =>  0:55
   CLOCK: [2017-12-06 Wed 23:14]--[2017-12-06 Wed 23:23] =>  0:09
   CLOCK: [2017-12-06 Wed 22:33]--[2017-12-06 Wed 22:34] =>  0:01
   CLOCK: [2017-12-06 Wed 22:09]--[2017-12-06 Wed 22:15] =>  0:06
   CLOCK: [2017-12-06 Wed 14:56]--[2017-12-06 Wed 17:29] =>  2:33
   CLOCK: [2017-12-05 Tue 14:55]--[2017-12-05 Tue 23:54] =>  8:59
   CLOCK: [2017-12-05 Tue 13:25]--[2017-12-05 Tue 13:46] =>  0:21
   CLOCK: [2017-12-04 Mon 21:19]--[2017-12-04 Mon 21:38] =>  0:19
   CLOCK: [2017-12-04 Mon 03:25]--[2017-12-04 Mon 03:36] =>  0:11
   CLOCK: [2017-12-04 Mon 03:15]--[2017-12-04 Mon 03:16] =>  0:01
   CLOCK: [2017-12-04 Mon 02:39]--[2017-12-04 Mon 03:14] =>  0:35
   CLOCK: [2017-12-03 Sun 23:50]--[2017-12-04 Mon 00:04] =>  0:14
   - Note taken on [2017-12-03 Sun 23:44] \\
     Hello
   CLOCK: [2017-12-03 Sun 22:43]--[2017-12-03 Sun 23:44] =>  1:01
   CLOCK: [2017-11-27 Mon 17:32]--[2017-12-01 Fri 16:02] => 94:30
   CLOCK: [2017-11-27 Mon 17:25]--[2017-11-27 Mon 17:24] => -1:59
   CLOCK: [2017-11-20 Mon 21:30]--[2017-11-21 Tue 17:41] => 20:11
   CLOCK: [2017-11-20 Mon 19:24]--[2017-11-20 Mon 20:06] =>  0:42
   CLOCK: [2017-11-18 Sat 16:47]--[2017-11-18 Sat 17:00] =>  0:13
   CLOCK: [2017-11-18 Sat 16:25]--[2017-11-18 Sat 16:41] =>  0:16
   CLOCK: [2017-11-15 Wed 20:50]--[2017-11-15 Wed 20:53] =>  0:03
   CLOCK: [2017-11-14 Tue 21:45]--[2017-11-15 Wed 14:36] => 16:51
   CLOCK: [2017-11-14 Tue 18:40]--[2017-11-14 Tue 18:55] =>  0:15
   CLOCK: [2017-11-13 Mon 18:15]--[2017-11-13 Mon 18:51] =>  0:36
   CLOCK: [2017-11-11 Sat 19:59]--[2017-11-11 Sat 20:15] =>  0:16
   CLOCK: [2017-11-11 Sat 19:29]--[2017-11-11 Sat 19:42] =>  0:13
   CLOCK: [2017-10-23 Mon 19:01]--[2017-10-23 Mon 22:27] =>  3:26
   CLOCK: [2017-09-20 Wed 20:40]--[2017-09-20 Wed 20:43] =>  0:03
   CLOCK: [2017-09-19 Tue 12:51]--[2017-09-19 Tue 13:06] =>  0:15
   CLOCK: [2017-09-19 Tue 12:00]--[2017-09-19 Tue 12:32] =>  0:32
   CLOCK: [2017-09-19 Tue 10:28]--[2017-09-19 Tue 10:40] =>  0:12
   - Note taken on [2017-09-13 Wed 21:51] \\
     adding some comments to remember TODOs.
   CLOCK: [2017-09-13 Wed 21:50]--[2017-09-13 Wed 22:07] =>  0:17
   CLOCK: [2017-09-13 Wed 17:21]--[2017-09-13 Wed 17:44] =>  0:23
   CLOCK: [2017-09-13 Wed 16:07]--[2017-09-13 Wed 16:11] =>  0:04
   - Note taken on [2017-09-13 Wed 13:16] \\
     Improving on change log note,

     org-clock-lotus-log-note-on-change-timer now cease to be buffer local.
   CLOCK: [2017-09-13 Wed 13:14]--[2017-09-13 Wed 13:20] =>  0:06
   CLOCK: [2017-09-13 Wed 13:07]--[2017-09-13 Wed 13:12] =>  0:05
   CLOCK: [2017-09-12 Tue 19:54]--[2017-09-12 Tue 20:15] =>  0:21
   CLOCK: [2017-09-12 Tue 19:17]--[2017-09-12 Tue 19:33] =>  0:16
   CLOCK: [2017-09-12 Tue 19:09]--[2017-09-12 Tue 19:13] =>  0:04
   CLOCK: [2017-09-12 Tue 18:38]--[2017-09-12 Tue 18:59] =>  0:21
   - Note taken on [2017-09-11 Mon 21:40] \\
     Testing it
   - Note taken on [2017-09-11 Mon 21:32] \\
     Improving log note taking
   CLOCK: [2017-09-11 Mon 21:00]--[2017-09-12 Tue 09:07] => 12:07
   CLOCK: [2017-09-10 Sun 19:44]--[2017-09-10 Sun 22:02] =>  2:18
   CLOCK: [2017-09-05 Tue 12:21]--[2017-09-06 Wed 21:54] => 33:33
   CLOCK: [2017-09-05 Tue 12:19]--[2017-09-05 Tue 12:21] =>  0:02
   CLOCK: [2017-09-05 Tue 12:17]--[2017-09-05 Tue 12:19] =>  0:02
   CLOCK: [2017-09-05 Tue 10:53]--[2017-09-05 Tue 12:17] =>  1:24
   CLOCK: [2017-09-04 Mon 15:50]--[2017-09-05 Tue 10:53] => 19:03
   CLOCK: [2017-09-02 Sat 18:08]--[2017-09-02 Sat 22:18] =>  4:10
   CLOCK: [2017-08-31 Thu 17:41]--[2017-09-01 Fri 23:15] => 29:34
   CLOCK: [2017-08-28 Mon 17:41]--[2017-08-29 Tue 20:00] => 26:19
   CLOCK: [2017-08-18 Fri 20:44]--[2017-08-18 Fri 21:33] =>  0:49
   CLOCK: [2017-08-18 Fri 19:30]--[2017-08-18 Fri 20:40] =>  1:10
   CLOCK: [2017-08-18 Fri 16:31]--[2017-08-18 Fri 19:14] =>  2:43
   CLOCK: [2017-08-17 Thu 19:39]--[2017-08-18 Fri 12:38] => 16:59
   CLOCK: [2017-08-16 Wed 11:40]--[2017-08-17 Thu 18:51] => 31:11
   CLOCK: [2017-08-14 Mon 15:15]--[2017-08-14 Mon 16:21] =>  1:06
   CLOCK: [2017-08-08 Tue 16:25]--[2017-08-11 Fri 22:12] => 77:47
   CLOCK: [2017-08-05 Sat 08:57]--[2017-08-05 Sat 09:14] =>  0:17
   CLOCK: [2017-08-04 Fri 15:12]--[2017-08-05 Sat 08:41] => 17:29
   CLOCK: [2017-08-04 Fri 12:03]--[2017-08-04 Fri 12:50] =>  0:47
   CLOCK: [2017-08-03 Thu 12:24]--[2017-08-03 Thu 19:56] =>  7:32
   CLOCK: [2017-08-03 Thu 11:26]--[2017-08-03 Thu 11:31] =>  0:05
   CLOCK: [2017-08-02 Wed 20:00]--[2017-08-02 Wed 20:30] =>  0:30
   CLOCK: [2017-08-02 Wed 17:57]--[2017-08-02 Wed 18:12] =>  0:15
   CLOCK: [2017-08-02 Wed 17:56]--[2017-08-02 Wed 17:57] =>  0:01
   CLOCK: [2017-07-30 Sun 23:51]--[2017-07-31 Mon 00:08] =>  0:17
   CLOCK: [2017-07-30 Sun 20:26]--[2017-07-30 Sun 23:00] =>  2:34
   CLOCK: [2017-07-30 Sun 11:04]--[2017-07-30 Sun 18:32] =>  7:28
   CLOCK: [2017-07-30 Sun 09:28]--[2017-07-30 Sun 09:29] =>  0:01
   CLOCK: [2017-07-29 Sat 17:25]--[2017-07-29 Sat 20:13] =>  2:48
   CLOCK: [2017-07-29 Sat 11:03]--[2017-07-29 Sat 15:52] =>  4:49
   CLOCK: [2017-07-28 Fri 13:15]--[2017-07-28 Fri 16:03] =>  2:48
   CLOCK: [2017-07-27 Thu 14:00]--[2017-07-27 Thu 15:40] =>  1:40
   CLOCK: [2017-07-27 Thu 13:17]--[2017-07-27 Thu 13:47] =>  0:30
   CLOCK: [2017-07-26 Wed 11:46]--[2017-07-26 Wed 21:48] => 10:02
   CLOCK: [2017-07-25 Tue 20:25]--[2017-07-25 Tue 21:15] =>  0:50
   CLOCK: [2017-07-25 Tue 15:37]--[2017-07-25 Tue 20:22] =>  4:45
   CLOCK: [2017-07-24 Mon 20:19]--[2017-07-24 Mon 20:33] =>  0:14
   CLOCK: [2017-07-24 Mon 19:48]--[2017-07-24 Mon 20:14] =>  0:26
   CLOCK: [2017-07-24 Mon 14:09]--[2017-07-24 Mon 15:00] =>  0:51
   CLOCK: [2017-07-24 Mon 13:07]--[2017-07-24 Mon 14:01] =>  0:54
   CLOCK: [2017-07-24 Mon 11:27]--[2017-07-24 Mon 11:34] =>  0:07
   CLOCK: [2017-07-18 Tue 16:01]--[2017-07-18 Tue 19:22] =>  3:21
   CLOCK: [2017-06-28 Wed 18:13]--[2017-06-28 Wed 21:43] =>  3:30
   CLOCK: [2017-06-16 Fri 21:07]--[2017-06-16 Fri 23:01] =>  1:54
   CLOCK: [2017-06-16 Fri 15:18]--[2017-06-16 Fri 15:28] =>  0:10
   CLOCK: [2017-06-15 Thu 21:48]--[2017-06-15 Thu 21:55] =>  0:07
   CLOCK: [2017-01-28 Sat 13:31]--[2017-01-28 Sat 13:43] =>  0:12
   CLOCK: [2017-01-27 Fri 10:09]--[2017-01-27 Fri 21:05] => 10:56
   CLOCK: [2017-01-26 Thu 16:53]--[2017-01-26 Thu 17:18] =>  0:25
   CLOCK: [2017-01-24 Tue 09:57]--[2017-01-24 Tue 12:15] =>  2:18
   CLOCK: [2017-01-23 Mon 21:49]--[2017-01-23 Mon 22:25] =>  0:36
   CLOCK: [2017-01-23 Mon 18:17]--[2017-01-23 Mon 18:22] =>  0:05
   CLOCK: [2017-01-23 Mon 09:02]--[2017-01-23 Mon 18:08] =>  9:06
   CLOCK: [2017-01-22 Sun 16:37]--[2017-01-22 Sun 23:03] =>  6:26
   CLOCK: [2017-01-21 Sat 17:48]--[2017-01-21 Sat 19:51] =>  2:03
   CLOCK: [2017-01-20 Fri 10:29]--[2017-01-20 Fri 20:05] =>  9:36
   CLOCK: [2017-01-20 Fri 10:26]--[2017-01-20 Fri 10:29] =>  0:03
   CLOCK: [2017-01-19 Thu 21:57]--[2017-01-20 Fri 00:35] =>  2:38
   CLOCK: [2017-01-19 Thu 21:21]--[2017-01-19 Thu 21:52] =>  0:31
   CLOCK: [2017-01-19 Thu 10:53]--[2017-01-19 Thu 19:53] =>  9:00
   CLOCK: [2017-01-17 Tue 10:20]--[2017-01-17 Tue 11:15] =>  0:55
   CLOCK: [2017-01-16 Mon 20:56]--[2017-01-16 Mon 20:57] =>  0:01
   CLOCK: [2017-01-16 Mon 15:20]--[2017-01-16 Mon 20:55] =>  5:35
   CLOCK: [2017-01-14 Sat 17:46]--[2017-01-14 Sat 19:10] =>  1:24
   CLOCK: [2017-01-13 Fri 23:43]--[2017-01-14 Sat 00:55] =>  1:12
   CLOCK: [2017-01-13 Fri 14:32]--[2017-01-13 Fri 21:06] =>  6:34
   CLOCK: [2017-01-13 Fri 12:40]--[2017-01-13 Fri 13:38] =>  0:58
   CLOCK: [2017-01-12 Thu 14:46]--[2017-01-12 Thu 15:05] =>  0:19
   CLOCK: [2017-01-10 Tue 15:00]--[2017-01-10 Tue 18:52] =>  3:52
   CLOCK: [2017-01-09 Mon 22:45]--[2017-01-09 Mon 22:47] =>  0:02
   CLOCK: [2017-01-09 Mon 16:03]--[2017-01-09 Mon 22:40] =>  6:37
   CLOCK: [2017-01-06 Fri 18:54]--[2017-01-06 Fri 20:24] =>  1:30
   CLOCK: [2017-01-05 Thu 15:08]--[2017-01-05 Thu 22:23] =>  7:15
   CLOCK: [2017-01-03 Tue 19:28]--[2017-01-05 Thu 01:20] => 29:52
   CLOCK: [2017-01-03 Tue 13:30]--[2017-01-03 Tue 19:21] =>  5:51
   CLOCK: [2017-01-01 Sun 18:33]--[2017-01-02 Mon 21:09] => 26:36
   CLOCK: [2016-12-30 Fri 16:14]--[2016-12-30 Fri 19:54] =>  3:40
   CLOCK: [2016-12-29 Thu 15:00]--[2016-12-29 Thu 21:54] =>  6:54
   CLOCK: [2016-12-27 Tue 17:13]--[2016-12-27 Tue 17:17] =>  0:04
   CLOCK: [2016-12-26 Mon 17:30]--[2016-12-27 Tue 17:12] => 23:42
   CLOCK: [2016-12-18 Sun 19:53]--[2016-12-18 Sun 21:28] =>  1:35
   CLOCK: [2016-12-17 Sat 21:15]--[2016-12-17 Sat 22:25] =>  1:10
   CLOCK: [2016-12-17 Sat 13:53]--[2016-12-17 Sat 14:05] =>  0:12
   CLOCK: [2016-12-15 Thu 15:06]--[2016-12-15 Thu 23:31] =>  8:25
   CLOCK: [2016-12-14 Wed 21:50]--[2016-12-15 Thu 00:13] =>  2:23
   CLOCK: [2016-12-14 Wed 14:54]--[2016-12-14 Wed 20:01] =>  5:07
   CLOCK: [2016-12-13 Tue 14:48]--[2016-12-13 Tue 21:12] =>  6:24
   CLOCK: [2016-12-12 Mon 14:00]--[2016-12-12 Mon 22:25] =>  8:25
   CLOCK: [2016-12-11 Sun 17:09]--[2016-12-11 Sun 17:41] =>  0:32
   CLOCK: [2016-12-09 Fri 18:57]--[2016-12-10 Sat 01:15] =>  6:18
   CLOCK: [2016-12-09 Fri 17:25]--[2016-12-09 Fri 17:35] =>  0:10
   CLOCK: [2016-12-09 Fri 15:27]--[2016-12-09 Fri 17:03] =>  1:36
   CLOCK: [2016-12-07 Wed 12:31]--[2016-12-08 Thu 00:20] => 11:49
   CLOCK: [2016-12-07 Wed 12:29]--[2016-12-07 Wed 12:30] =>  0:01
   CLOCK: [2016-12-05 Mon 12:21]--[2016-12-05 Mon 22:20] =>  9:59
   CLOCK: [2016-12-04 Sun 16:02]--[2016-12-04 Sun 22:23] =>  6:21
   CLOCK: [2016-12-03 Sat 18:51]--[2016-12-03 Sat 23:49] =>  4:58
   CLOCK: [2016-12-01 Thu 23:51]--[2016-12-02 Fri 22:26] => 22:35
   CLOCK: [2016-12-01 Thu 16:02]--[2016-12-01 Thu 23:51] =>  7:49
   CLOCK: [2016-11-30 Wed 21:25]--[2016-12-01 Thu 15:29] => 18:04
   CLOCK: [2016-11-30 Wed 19:44]--[2016-11-30 Wed 21:25] =>  1:41
   CLOCK: [2016-11-29 Tue 17:08]--[2016-11-29 Tue 17:18] =>  0:10
   CLOCK: [2016-11-29 Tue 15:21]--[2016-11-29 Tue 16:06] =>  0:45
   CLOCK: [2016-11-27 Sun 03:10]--[2016-11-27 Sun 03:15] =>  0:05
   CLOCK: [2016-11-26 Sat 18:54]--[2016-11-27 Sun 00:27] =>  5:33
   CLOCK: [2016-11-26 Sat 18:42]--[2016-11-26 Sat 18:44] =>  0:02
   CLOCK: [2016-11-24 Thu 16:07]--[2016-11-25 Fri 02:47] => 10:40
   CLOCK: [2016-11-23 Wed 09:49]--[2016-11-23 Wed 18:46] =>  8:57
   CLOCK: [2016-11-23 Wed 09:46]--[2016-11-23 Wed 09:49] =>  0:03
   CLOCK: [2016-11-22 Tue 21:05]--[2016-11-22 Tue 21:06] =>  0:01
   CLOCK: [2016-11-22 Tue 15:40]--[2016-11-22 Tue 21:04] =>  5:24
   CLOCK: [2016-11-21 Mon 13:09]--[2016-11-21 Mon 22:21] =>  9:12
   CLOCK: [2016-11-20 Sun 22:35]--[2016-11-20 Sun 22:39] =>  0:04
   CLOCK: [2016-11-20 Sun 17:50]--[2016-11-20 Sun 21:58] =>  4:08
   CLOCK: [2016-11-20 Sun 17:14]--[2016-11-20 Sun 17:35] =>  0:21
   CLOCK: [2016-11-20 Sun 16:56]--[2016-11-20 Sun 17:06] =>  0:10
   CLOCK: [2016-11-17 Thu 16:10]--[2016-11-18 Fri 00:01] =>  7:51
   CLOCK: [2016-11-16 Wed 15:40]--[2016-11-16 Wed 22:34] =>  6:54
   CLOCK: [2016-11-15 Tue 16:29]--[2016-11-15 Tue 20:58] =>  4:29
   CLOCK: [2016-11-15 Tue 16:17]--[2016-11-15 Tue 16:25] =>  0:08
   CLOCK: [2016-11-15 Tue 16:09]--[2016-11-15 Tue 16:13] =>  0:04
   CLOCK: [2016-11-15 Tue 00:16]--[2016-11-15 Tue 01:56] =>  1:40
   CLOCK: [2016-11-15 Tue 00:09]--[2016-11-15 Tue 00:16] =>  0:07
   CLOCK: [2016-11-14 Mon 18:34]--[2016-11-14 Mon 22:33] =>  3:59
   CLOCK: [2016-11-14 Mon 17:48]--[2016-11-14 Mon 18:32] =>  0:44
   CLOCK: [2016-11-14 Mon 15:30]--[2016-11-14 Mon 15:39] =>  0:09
   CLOCK: [2016-11-12 Sat 10:47]--[2016-11-12 Sat 10:57] =>  0:10
   CLOCK: [2016-11-11 Fri 16:26]--[2016-11-11 Fri 18:25] =>  1:59
   CLOCK: [2016-11-09 Wed 18:05]--[2016-11-09 Wed 18:06] =>  0:01
   CLOCK: [2016-11-09 Wed 12:13]--[2016-11-09 Wed 12:18] =>  0:05
   CLOCK: [2016-11-07 Mon 16:40]--[2016-11-07 Mon 16:44] =>  0:04
   CLOCK: [2016-11-04 Fri 20:10]--[2016-11-04 Fri 20:11] =>  0:01
   CLOCK: [2016-11-03 Thu 18:12]--[2016-11-03 Thu 18:20] =>  0:08
   CLOCK: [2016-11-03 Thu 17:33]--[2016-11-03 Thu 17:54] =>  0:21
   CLOCK: [2016-11-03 Thu 17:17]--[2016-11-03 Thu 17:27] =>  0:10
   CLOCK: [2016-11-02 Wed 22:49]--[2016-11-02 Wed 22:53] =>  0:04
   CLOCK: [2016-11-02 Wed 22:44]--[2016-11-02 Wed 22:49] =>  0:05
   CLOCK: [2016-11-02 Wed 18:18]--[2016-11-02 Wed 22:43] =>  4:25
   CLOCK: [2016-11-01 Tue 16:03]--[2016-11-01 Tue 17:08] =>  1:05
   CLOCK: [2016-10-31 Mon 00:08]--[2016-10-31 Mon 14:37] => 14:29
   CLOCK: [2016-10-29 Sat 01:27]--[2016-10-29 Sat 16:16] => 14:49
   CLOCK: [2016-10-28 Fri 18:15]--[2016-10-28 Fri 20:42] =>  2:27
   CLOCK: [2016-10-27 Thu 19:43]--[2016-10-28 Fri 01:06] =>  5:23
   CLOCK: [2016-10-26 Wed 17:00]--[2016-10-27 Thu 02:09] =>  9:09
   CLOCK: [2016-10-26 Wed 02:19]--[2016-10-26 Wed 02:23] =>  0:04
   CLOCK: [2016-10-25 Tue 21:16]--[2016-10-25 Tue 21:19] =>  0:03
   CLOCK: [2016-10-25 Tue 15:13]--[2016-10-25 Tue 21:16] =>  6:03
   CLOCK: [2016-10-24 Mon 17:16]--[2016-10-25 Tue 02:01] =>  8:45
   CLOCK: [2016-10-24 Mon 02:47]--[2016-10-24 Mon 03:37] =>  0:50
   CLOCK: [2016-10-21 Fri 15:12]--[2016-10-21 Fri 21:51] =>  6:39
   CLOCK: [2016-10-20 Thu 22:05]--[2016-10-21 Fri 00:35] =>  2:30
   CLOCK: [2016-10-20 Thu 15:51]--[2016-10-20 Thu 21:33] =>  5:42
   CLOCK: [2016-10-19 Wed 23:04]--[2016-10-20 Thu 01:52] =>  2:48
   CLOCK: [2016-10-18 Tue 16:10]--[2016-10-18 Tue 16:11] =>  0:01
   CLOCK: [2016-10-17 Mon 21:43]--[2016-10-17 Mon 21:57] =>  0:14
   CLOCK: [2016-10-17 Mon 21:42]--[2016-10-17 Mon 21:43] =>  0:01
   CLOCK: [2016-10-17 Mon 14:09]--[2016-10-17 Mon 15:10] =>  1:01
   CLOCK: [2016-10-16 Sun 14:19]--[2016-10-16 Sun 14:42] =>  0:23
   CLOCK: [2016-10-15 Sat 19:14]--[2016-10-15 Sat 19:15] =>  0:01
   CLOCK: [2016-10-14 Fri 19:24]--[2016-10-14 Fri 19:44] =>  0:20
   CLOCK: [2016-10-14 Fri 16:09]--[2016-10-14 Fri 16:31] =>  0:22
   CLOCK: [2016-10-14 Fri 15:46]--[2016-10-14 Fri 15:56] =>  0:10
   CLOCK: [2016-10-14 Fri 13:52]--[2016-10-14 Fri 15:39] =>  1:47
   CLOCK: [2016-10-13 Thu 17:37]--[2016-10-13 Thu 23:18] =>  5:41
   CLOCK: [2016-10-12 Wed 15:15]--[2016-10-12 Wed 21:41] =>  6:26
   CLOCK: [2016-10-11 Tue 17:36]--[2016-10-11 Tue 20:44] =>  3:08
   CLOCK: [2016-10-10 Mon 16:38]--[2016-10-10 Mon 23:26] =>  6:48
   CLOCK: [2016-10-10 Mon 15:41]--[2016-10-10 Mon 16:38] =>  0:57
   CLOCK: [2016-10-08 Sat 17:17]--[2016-10-08 Sat 17:47] =>  0:30
   CLOCK: [2016-10-07 Fri 17:02]--[2016-10-07 Fri 21:23] =>  4:21
   CLOCK: [2016-10-06 Thu 22:22]--[2016-10-06 Thu 22:26] =>  0:04
   CLOCK: [2016-10-06 Thu 13:44]--[2016-10-06 Thu 22:21] =>  8:37
   CLOCK: [2016-10-05 Wed 14:26]--[2016-10-05 Wed 22:40] =>  8:14
   CLOCK: [2016-10-04 Tue 13:16]--[2016-10-04 Tue 20:44] =>  7:28
   CLOCK: [2016-10-03 Mon 20:53]--[2016-10-03 Mon 21:05] =>  0:12
   CLOCK: [2016-10-03 Mon 12:26]--[2016-10-03 Mon 20:52] =>  8:26
   CLOCK: [2016-10-03 Mon 12:25]--[2016-10-03 Mon 12:26] =>  0:01
   CLOCK: [2016-10-03 Mon 12:04]--[2016-10-03 Mon 12:24] =>  0:20
   CLOCK: [2016-10-03 Mon 12:03]--[2016-10-03 Mon 12:04] =>  0:01
   CLOCK: [2016-10-03 Mon 11:58]--[2016-10-03 Mon 12:02] =>  0:04
   CLOCK: [2016-10-02 Sun 21:44]--[2016-10-02 Sun 21:47] =>  0:03
   CLOCK: [2016-10-02 Sun 17:07]--[2016-10-02 Sun 21:09] =>  4:02
   CLOCK: [2016-10-01 Sat 17:39]--[2016-10-01 Sat 17:52] =>  0:13
   CLOCK: [2016-10-01 Sat 16:41]--[2016-10-01 Sat 17:37] =>  0:56
   CLOCK: [2016-10-01 Sat 16:30]--[2016-10-01 Sat 16:36] =>  0:06
   CLOCK: [2016-09-30 Fri 20:56]--[2016-09-30 Fri 21:11] =>  0:15
   CLOCK: [2016-09-30 Fri 16:23]--[2016-09-30 Fri 20:55] =>  4:32
   CLOCK: [2016-09-29 Thu 15:01]--[2016-09-29 Thu 23:49] =>  8:48
   CLOCK: [2016-09-29 Thu 12:19]--[2016-09-29 Thu 13:17] =>  0:58
   CLOCK: [2016-09-29 Thu 00:02]--[2016-09-29 Thu 00:06] =>  0:04
   CLOCK: [2016-09-29 Thu 00:00]--[2016-09-29 Thu 00:01] =>  0:01
   CLOCK: [2016-09-28 Wed 23:58]--[2016-09-29 Thu 00:00] =>  0:02
   CLOCK: [2016-09-28 Wed 23:54]--[2016-09-28 Wed 23:58] =>  0:04
   CLOCK: [2016-09-28 Wed 23:40]--[2016-09-28 Wed 23:46] =>  0:06
   CLOCK: [2016-09-28 Wed 23:28]--[2016-09-28 Wed 23:34] =>  0:06
   CLOCK: [2016-09-28 Wed 22:56]--[2016-09-28 Wed 23:15] =>  0:19
   CLOCK: [2016-09-28 Wed 22:53]--[2016-09-28 Wed 22:54] =>  0:01
   CLOCK: [2016-09-28 Wed 22:42]--[2016-09-28 Wed 22:53] =>  0:11
   CLOCK: [2016-09-28 Wed 20:39]--[2016-09-28 Wed 22:41] =>  2:02
   CLOCK: [2016-09-28 Wed 20:32]--[2016-09-28 Wed 20:35] =>  0:03
   CLOCK: [2016-09-28 Wed 20:26]--[2016-09-28 Wed 20:28] =>  0:02
   CLOCK: [2016-09-28 Wed 20:17]--[2016-09-28 Wed 20:26] =>  0:09
   CLOCK: [2016-09-28 Wed 20:16]--[2016-09-28 Wed 20:17] =>  0:01
   CLOCK: [2016-09-26 Mon 15:29]--[2016-09-28 Wed 20:16] => 52:47
   CLOCK: [2016-09-23 Fri 10:59]--[2016-09-24 Sat 01:32] => 14:33
   CLOCK: [2016-09-23 Fri 10:51]--[2016-09-23 Fri 10:58] =>  0:07
   CLOCK: [2016-09-23 Fri 10:50]--[2016-09-23 Fri 10:51] =>  0:01
   CLOCK: [2016-09-14 Wed 18:13]--[2016-09-14 Wed 18:17] =>  0:04
   CLOCK: [2016-09-08 Thu 15:17]--[2016-09-08 Thu 22:03] =>  6:46
   CLOCK: [2016-09-02 Fri 16:31]--[2016-09-02 Fri 20:45] =>  4:14
   CLOCK: [2016-09-02 Fri 15:33]--[2016-09-02 Fri 15:53] =>  0:20
   CLOCK: [2016-09-01 Thu 15:08]--[2016-09-01 Thu 20:17] =>  5:09
   CLOCK: [2016-08-04 Thu 23:42]--[2016-08-05 Fri 00:04] =>  0:22
   CLOCK: [2016-08-01 Mon 15:50]--[2016-08-01 Mon 16:01] =>  0:11
   CLOCK: [2016-07-31 Sun 19:59]--[2016-07-31 Sun 20:05] =>  0:06
   CLOCK: [2016-07-31 Sun 19:55]--[2016-07-31 Sun 19:56] =>  0:01
   CLOCK: [2016-07-31 Sun 13:23]--[2016-07-31 Sun 13:24] =>  0:01
   CLOCK: [2016-07-08 Fri 12:38]--[2016-07-08 Fri 12:39] =>  0:01
   CLOCK: [2016-07-08 Fri 12:24]--[2016-07-08 Fri 12:26] =>  0:02
   CLOCK: [2016-07-08 Fri 12:23]--[2016-07-08 Fri 12:24] =>  0:01
   CLOCK: [2016-07-08 Fri 12:21]--[2016-07-08 Fri 12:23] =>  0:02
   CLOCK: [2016-07-08 Fri 12:15]--[2016-07-08 Fri 12:21] =>  0:06
   CLOCK: [2016-07-08 Fri 12:11]--[2016-07-08 Fri 12:13] =>  0:02
   CLOCK: [2016-07-07 Thu 22:19]--[2016-07-07 Thu 22:24] =>  0:05
   CLOCK: [2016-07-07 Thu 21:28]--[2016-07-07 Thu 21:31] =>  0:03
   CLOCK: [2016-07-07 Thu 21:23]--[2016-07-07 Thu 21:26] =>  0:03
   CLOCK: [2016-06-29 Wed 18:19]--[2016-06-29 Wed 18:20] =>  0:01
   CLOCK: [2016-06-29 Wed 18:06]--[2016-06-29 Wed 18:09] =>  0:03
   CLOCK: [2016-06-29 Wed 12:22]--[2016-06-29 Wed 14:18] =>  1:56
   CLOCK: [2016-06-28 Tue 20:12]--[2016-06-28 Tue 20:13] =>  0:01
   CLOCK: [2016-06-28 Tue 13:30]--[2016-06-28 Tue 13:32] =>  0:02
   CLOCK: [2016-06-28 Tue 13:08]--[2016-06-28 Tue 13:11] =>  0:03
   CLOCK: [2016-06-28 Tue 12:49]--[2016-06-28 Tue 13:08] =>  0:19
   CLOCK: [2016-06-28 Tue 12:29]--[2016-06-28 Tue 12:48] =>  0:19
   CLOCK: [2016-06-28 Tue 12:10]--[2016-06-28 Tue 12:28] =>  0:18
   CLOCK: [2016-06-26 Sun 20:15]--[2016-06-27 Mon 14:08] => 17:53
   CLOCK: [2016-06-26 Sun 19:38]--[2016-06-26 Sun 20:14] =>  0:36
   CLOCK: [2016-06-26 Sun 19:07]--[2016-06-26 Sun 19:22] =>  0:15
   CLOCK: [2016-06-26 Sun 17:19]--[2016-06-26 Sun 17:55] =>  0:36
   CLOCK: [2016-06-25 Sat 20:31]--[2016-06-25 Sat 22:26] =>  1:55
   - almost finished done proper reporting
   - Test
   - Test
   - Best
   CLOCK: [2016-06-25 Sat 19:02]--[2016-06-25 Sat 20:30] =>  1:28
   CLOCK: [2016-06-25 Sat 18:52]--[2016-06-25 Sat 19:01] =>  0:09
   CLOCK: [2016-06-25 Sat 18:38]--[2016-06-25 Sat 18:52] =>  0:14
   CLOCK: [2016-06-25 Sat 18:35]--[2016-06-25 Sat 18:37] =>  0:02
   CLOCK: [2016-06-25 Sat 18:14]--[2016-06-25 Sat 18:31] =>  0:17
   CLOCK: [2016-06-22 Wed 18:15]--[2016-06-22 Wed 18:16] =>  0:01
   CLOCK: [2016-06-22 Wed 18:10]--[2016-06-22 Wed 18:14] =>  0:04
   CLOCK: [2016-06-22 Wed 17:37]--[2016-06-22 Wed 17:38] =>  0:01
   CLOCK: [2016-06-22 Wed 17:35]--[2016-06-22 Wed 17:36] =>  0:01
   CLOCK: [2016-06-22 Wed 16:55]--[2016-06-22 Wed 17:00] =>  0:05
   CLOCK: [2016-06-22 Wed 16:39]--[2016-06-22 Wed 16:42] =>  0:03
   CLOCK: [2016-06-21 Tue 19:46]--[2016-06-21 Tue 20:40] =>  0:54
   CLOCK: [2016-06-21 Tue 19:37]--[2016-06-21 Tue 19:43] =>  0:06
   CLOCK: [2016-06-21 Tue 19:29]--[2016-06-21 Tue 19:36] =>  0:07
   CLOCK: [2016-06-20 Mon 23:35]--[2016-06-20 Mon 23:36] =>  0:01
   CLOCK: [2016-06-20 Mon 23:22]--[2016-06-20 Mon 23:23] =>  0:01
   CLOCK: [2016-06-20 Mon 22:58]--[2016-06-20 Mon 23:22] =>  0:24
   CLOCK: [2016-06-20 Mon 22:55]--[2016-06-20 Mon 22:56] =>  0:01
   CLOCK: [2016-06-20 Mon 20:52]--[2016-06-20 Mon 22:54] =>  2:02
   CLOCK: [2016-06-20 Mon 19:56]--[2016-06-20 Mon 20:52] =>  0:56
   CLOCK: [2016-06-20 Mon 14:57]--[2016-06-20 Mon 19:54] =>  4:57
   CLOCK: [2016-06-18 Sat 12:53]--[2016-06-18 Sat 16:23] =>  3:30
   CLOCK: [2016-06-17 Fri 18:34]--[2016-06-17 Fri 18:38] =>  0:04
   CLOCK: [2016-06-17 Fri 18:21]--[2016-06-17 Fri 18:22] =>  0:01
   CLOCK: [2016-06-17 Fri 18:00]--[2016-06-17 Fri 18:01] =>  0:01
   CLOCK: [2016-06-17 Fri 17:06]--[2016-06-17 Fri 17:41] =>  0:35
   CLOCK: [2016-06-17 Fri 16:51]--[2016-06-17 Fri 16:55] =>  0:04
   CLOCK: [2016-06-17 Fri 14:11]--[2016-06-17 Fri 16:48] =>  2:37
   CLOCK: [2016-06-17 Fri 14:04]--[2016-06-17 Fri 14:10] =>  0:06
   CLOCK: [2016-06-17 Fri 13:32]--[2016-06-17 Fri 13:33] =>  0:01
   CLOCK: [2016-06-16 Thu 21:17]--[2016-06-16 Thu 21:21] =>  0:04
   CLOCK: [2016-06-16 Thu 15:24]--[2016-06-16 Thu 21:16] =>  5:52
   CLOCK: [2016-06-16 Thu 15:21]--[2016-06-16 Thu 15:23] =>  0:02
   CLOCK: [2016-06-16 Thu 15:10]--[2016-06-16 Thu 15:20] =>  0:10
   CLOCK: [2016-06-16 Thu 15:07]--[2016-06-16 Thu 15:08] =>  0:01
   CLOCK: [2016-06-16 Thu 10:49]--[2016-06-16 Thu 15:07] =>  4:18
   CLOCK: [2016-03-23 Wed 22:26]--[2016-03-28 Mon 10:55] => 108:29
   CLOCK: [2016-03-23 Wed 20:56]--[2016-03-23 Wed 21:15] =>  0:19
   CLOCK: [2016-03-23 Wed 16:51]--[2016-03-23 Wed 16:58] =>  0:07
   CLOCK: [2016-03-22 Tue 11:50]--[2016-03-23 Wed 11:47] => 23:57
   CLOCK: [2016-03-21 Mon 11:33]--[2016-03-21 Mon 13:10] =>  1:37
   CLOCK: [2016-03-20 Sun 19:06]--[2016-03-21 Mon 01:17] =>  6:11
   CLOCK: [2016-03-20 Sun 15:10]--[2016-03-20 Sun 15:12] =>  0:02
   CLOCK: [2016-03-20 Sun 02:18]--[2016-03-20 Sun 02:24] =>  0:06
   CLOCK: [2016-03-20 Sun 02:14]--[2016-03-20 Sun 02:17] =>  0:03
   CLOCK: [2016-03-20 Sun 02:04]--[2016-03-20 Sun 02:13] =>  0:09
   CLOCK: [2016-03-19 Sat 22:31]--[2016-03-20 Sun 01:55] =>  3:24
   CLOCK: [2016-03-18 Fri 20:29]--[2016-03-19 Sat 01:39] =>  5:10
   CLOCK: [2016-03-18 Fri 20:21]--[2016-03-18 Fri 20:26] =>  0:05
   CLOCK: [2016-03-16 Wed 14:52]--[2016-03-16 Wed 15:56] =>  1:04
   CLOCK: [2016-03-16 Wed 12:28]--[2016-03-16 Wed 12:53] =>  0:25
   CLOCK: [2016-03-16 Wed 08:52]--[2016-03-16 Wed 12:27] =>  3:35
   CLOCK: [2016-03-15 Tue 22:45]--[2016-03-15 Tue 22:59] =>  0:14
   CLOCK: [2016-03-15 Tue 17:48]--[2016-03-15 Tue 17:49] =>  0:01
   CLOCK: [2016-03-15 Tue 17:34]--[2016-03-15 Tue 17:48] =>  0:14
   CLOCK: [2016-03-15 Tue 12:02]--[2016-03-15 Tue 14:12] =>  2:10
   CLOCK: [2016-03-14 Mon 21:14]--[2016-03-15 Tue 02:20] =>  5:06
   CLOCK: [2016-03-14 Mon 21:02]--[2016-03-14 Mon 21:14] =>  0:12
   CLOCK: [2016-03-14 Mon 20:58]--[2016-03-14 Mon 21:02] =>  0:04
   CLOCK: [2016-03-14 Mon 18:38]--[2016-03-14 Mon 20:11] =>  1:33
   CLOCK: [2016-03-14 Mon 12:58]--[2016-03-14 Mon 13:32] =>  0:34
   CLOCK: [2016-03-14 Mon 10:46]--[2016-03-14 Mon 11:01] =>  0:15
   CLOCK: [2016-03-13 Sun 19:31]--[2016-03-13 Sun 20:29] =>  0:58
   CLOCK: [2016-03-12 Sat 23:46]--[2016-03-13 Sun 00:52] =>  1:06
   CLOCK: [2016-03-07 Mon 18:04]--[2016-03-07 Mon 18:05] =>  0:01
   CLOCK: [2016-03-07 Mon 17:40]--[2016-03-07 Mon 18:00] =>  0:20
   CLOCK: [2016-03-07 Mon 12:11]--[2016-03-07 Mon 13:51] =>  1:40
   CLOCK: [2016-03-02 Wed 10:34]--[2016-03-02 Wed 10:43] =>  0:09
   CLOCK: [2016-02-08 Mon 14:32]--[2016-02-08 Mon 16:57] =>  2:25
   CLOCK: [2016-02-07 Sun 13:54]--[2016-02-07 Sun 14:57] =>  1:03
   CLOCK: [2016-02-06 Sat 01:51]--[2016-02-06 Sat 02:10] =>  0:19
   CLOCK: [2016-02-04 Thu 23:20]--[2016-02-05 Fri 02:25] =>  3:05
   CLOCK: [2016-02-04 Thu 21:40]--[2016-02-04 Thu 21:41] =>  0:01
   CLOCK: [2016-02-04 Thu 20:36]--[2016-02-04 Thu 21:40] =>  1:04
   CLOCK: [2016-02-04 Thu 02:13]--[2016-02-04 Thu 16:32] => 14:19
   CLOCK: [2016-02-04 Thu 00:53]--[2016-02-04 Thu 02:12] =>  1:19
   CLOCK: [2016-02-04 Thu 00:44]--[2016-02-04 Thu 00:45] =>  0:01
   CLOCK: [2016-02-04 Thu 00:28]--[2016-02-04 Thu 00:40] =>  0:12
   CLOCK: [2016-02-03 Wed 17:42]--[2016-02-04 Thu 00:27] =>  6:45
   CLOCK: [2016-02-03 Wed 01:10]--[2016-02-03 Wed 01:30] =>  0:20
   :END:
*** Why it is important
    :PROPERTIES:
    :END:
It is very important and need to completed as soon as possible.
*** Goals [very incomplete]
**** We should be able to do thing without visiting org file with task heading
**** report generation, context clocking etc.
*** When it will called minimally working and self hosting
**** When all time were accounted.
*** Critical BUGS are here
**** BUGS
***** CLOSED continuous file-notify event causing resetting of current-idle-time
      CLOSED: [2017-12-12 Tue 20:27]
      :LOGBOOK:
      - State "CLOSED"      from "DONE"       [2017-12-12 Tue 20:36] \\
        filenotify.el g-file-notify and autorevert.el responsible Here for any file open
        autorevert(filenotify) register for g-file-notify in this case g-file-notify not
        only notify for this it also notify for all files in the containing directory of
        opened file, these event are also treated like any key input event in emacs and
        causing current-idle-time to get reset.

        In this case when ~/.bbdb or and file in home dir opened than all file changes
        (edit, remove, add, modification) in home dir were reported and here ~/.xsession-errors
        and ~/.wget-hsts were continuously getting modified.
      :END:
 Basically some unwanted files have been get added into it
 e.g. ~/.xsession-errors ~/.wget-hsts
 TODO: DEBUG it how it gets dirty
 trace it who on earth making it dirty so often using (set-menubar-dirty-flag)
 it is here /usr/share/emacs/24.5/lisp/obsolete/lmenu.el.gz
****** Gdb trace
 #+BEGIN_SRC gdb
 define emacs-idle
   set pagination off
   display c
   trace-simple-f keyboard.c:2916
   trace-simple-f keyboard.c:2941
   trace-simple-f keyboard.c:2947
   trace-simple-f keyboard.c:2952
   trace-simple-f keyboard.c:2954
   trace-simple-f keyboard.c:2959
   trace-simple-f keyboard.c:3232

   dont-repeat
 end
 document emacs-idle
   trace function
 end
 #+END_SRC

****** Normal case
  #+BEGIN_SRC gdb
  Thread 1 "emacs" hit Breakpoint 1, read_char (commandflag=0x1, map=map@entry=0x8508766, prev_event=0xbd3f72, used_mouse_menu=used_mouse_menu@entry=0x7ffea9ef1ccb, end_time=end_time@entry=0x0) at keyboard.c:2916
  2916	in keyboard.c
  $768 = void
  Thu Dec  7 23:33:41 IST 2017
  #0  read_char (commandflag=0x1, map=map@entry=0x8508766, prev_event=0xbd3f72, used_mouse_menu=used_mouse_menu@entry=0x7ffea9ef1ccb, end_time=end_time@entry=0x0) at keyboard.c:2916
  #1  0x00000000004edc0d in read_key_sequence (keybuf=keybuf@entry=0x7ffea9ef1da0, prompt=0xbd3f72, dont_downcase_last=dont_downcase_last@entry=0x0, can_return_switch_frame=can_return_switch_frame@entry=0x1, fix_current_buffer=fi
  x_current_buffer@entry=0x1, prevent_redisplay=prevent_redisplay@entry=0x0, bufsize=0x1e) at keyboard.c:9089
  #2  0x00000000004ef970 in command_loop_1 () at keyboard.c:1453
  #3  0x0000000000553327 in internal_condition_case (bfun=bfun@entry=0x4ef770 <command_loop_1>, handlers=<optimized out>, hfun=hfun@entry=0x4e6420 <cmd_error>) at eval.c:1348
  #4  0x00000000004e189e in command_loop_2 (ignore=ignore@entry=0xbd3f72) at keyboard.c:1178
  #5  0x000000000055320b in internal_catch (tag=0xbf1ed2, func=func@entry=0x4e1880 <command_loop_2>, arg=0xbd3f72) at eval.c:1112
  #6  0x00000000004e5f96 in command_loop () at keyboard.c:1149
  #7  recursive_edit_1 () at keyboard.c:778
  #8  0x000000000050ed8f in read_minibuf (map=map@entry=0xbcf6e6, initial=initial@entry=0xbd3f72, prompt=<optimized out>, prompt@entry=0x5de64c1, expflag=<optimized out>, histvar=histvar@entry=0xbfbce2, histpos=<optimized out>, d
  efalt=0x8623006, allow_props=0x0, inherit_input_method=0x0) at minibuf.c:674
  #9  0x000000000050f39f in Fread_from_minibuffer (prompt=0x5de64c1, initial_contents=0xbd3f72, keymap=0xbcf6e6, read=0xbd3f72, hist=<optimized out>, default_value=0x8623006, inherit_input_method=0xbd3f72) at minibuf.c:957
  #10 0x0000000000555037 in Ffuncall (nargs=<optimized out>, args=args@entry=0x7ffea9ef2138) at eval.c:2844
  #11 0x000000000058a2a3 in exec_byte_code (bytestr=<optimized out>, vector=0x86b24d, maxdepth=<optimized out>, args_template=<optimized out>, nargs=nargs@entry=0x2, args=<optimized out>, args@entry=0x86b229 <pure+122249>) at byt
  ecode.c:916
  #12 0x0000000000554bc7 in funcall_lambda (fun=0x7ffea9ef2340, nargs=nargs@entry=0x2, arg_vector=0x86b229 <pure+122249>, arg_vector@entry=0x7ffea9ef22d8) at eval.c:2978
  #13 0x0000000000554ecb in Ffuncall (nargs=0x3, args=args@entry=0x7ffea9ef22d0) at eval.c:2872
  #14 0x000000000058a2a3 in exec_byte_code (bytestr=<optimized out>, vector=0x92b53d, maxdepth=<optimized out>, args_template=<optimized out>, nargs=<optimized out>, args=<optimized out>) at bytecode.c:916
  #15 0x00000000005543f3 in eval_sub (form=form@entry=0x92b4ee) at eval.c:2187
  #16 0x0000000000557be4 in Feval (form=form@entry=0x92b4ee, lexical=<optimized out>) at eval.c:1996
  #17 0x0000000000550c16 in Fcall_interactively (function=0xf4d172, record_flag=0xbd3f72, keys=0xbdc6bd) at callint.c:345
  #18 0x000000000055509d in Ffuncall (nargs=<optimized out>, args=args@entry=0x7ffea9ef2618) at eval.c:2818
  #19 0x000000000058a2a3 in exec_byte_code (bytestr=<optimized out>, vector=0x92d575, maxdepth=<optimized out>, args_template=<optimized out>, nargs=nargs@entry=0x1, args=<optimized out>, args@entry=0x92d551 <pure+917681>) at byt
  ecode.c:916
  #20 0x0000000000554bc7 in funcall_lambda (fun=0x0, nargs=nargs@entry=0x1, arg_vector=0x92d551 <pure+917681>, arg_vector@entry=0x7ffea9ef2778) at eval.c:2978
  #21 0x0000000000554ecb in Ffuncall (nargs=nargs@entry=0x2, args=args@entry=0x7ffea9ef2770) at eval.c:2872
  #22 0x00000000005551ea in call1 (fn=<optimized out>, arg1=<optimized out>) at eval.c:2610

  #23 0x00000000004efb0d in command_loop_1 () at keyboard.c:1560 NOTE
  #24 0x0000000000553327 in internal_condition_case (bfun=bfun@entry=0x4ef770 <command_loop_1>, handlers=<optimized out>, hfun=hfun@entry=0x4e6420 <cmd_error>) at eval.c:1348
  #25 0x00000000004e189e in command_loop_2 (ignore=ignore@entry=0xbd3f72) at keyboard.c:1178
  #26 0x000000000055320b in internal_catch (tag=0xbdf7a2, func=func@entry=0x4e1880 <command_loop_2>, arg=0xbd3f72) at eval.c:1112
  #27 0x00000000004e6007 in command_loop () at keyboard.c:1157
  #28 recursive_edit_1 () at keyboard.c:778
  #29 0x00000000004e6348 in Frecursive_edit () at keyboard.c:849
  #30 0x0000000000413ff1 in main (argc=<optimized out>, argv=0x7ffea9ef2b38) at emacs.c:1642
  #+END_SRC

****** Buggy case
 #+BEGIN_SRC gdb
  Thread 1 "emacs" hit Breakpoint 1, read_char (commandflag=0x1, map=map@entry=0x547b0a6, prev_event=0xbd3f72, used_mouse_menu=used_mouse_menu@entry=0x7ffea9ef26fb, end_time=end_time@entry=0x0) at keyboard.c:2916
  2916	in keyboard.c
  $875 = void
  Thu Dec  7 23:34:16 IST 2017
  #0  read_char (commandflag=0x1, map=map@entry=0x547b0a6, prev_event=0xbd3f72, used_mouse_menu=used_mouse_menu@entry=0x7ffea9ef26fb, end_time=end_time@entry=0x0) at keyboard.c:2916
  #1  0x00000000004edc0d in read_key_sequence (keybuf=keybuf@entry=0x7ffea9ef27d0, prompt=0xbd3f72, dont_downcase_last=dont_downcase_last@entry=0x0, can_return_switch_frame=can_return_switch_frame@entry=0x1, fix_current_buffer=fi
  x_current_buffer@entry=0x1, prevent_redisplay=prevent_redisplay@entry=0x0, bufsize=0x1e) at keyboard.c:9089

  #2  0x00000000004ef970 in command_loop_1 () at keyboard.c:1453  NOTE
  #3  0x0000000000553327 in internal_condition_case (bfun=bfun@entry=0x4ef770 <command_loop_1>, handlers=<optimized out>, hfun=hfun@entry=0x4e6420 <cmd_error>) at eval.c:1348
  #4  0x00000000004e189e in command_loop_2 (ignore=ignore@entry=0xbd3f72) at keyboard.c:1178
  #5  0x000000000055320b in internal_catch (tag=0xbdf7a2, func=func@entry=0x4e1880 <command_loop_2>, arg=0xbd3f72) at eval.c:1112
  #6  0x00000000004e6007 in command_loop () at keyboard.c:1157
  #7  recursive_edit_1 () at keyboard.c:778
  #8  0x00000000004e6348 in Frecursive_edit () at keyboard.c:849
  #9  0x0000000000413ff1 in main (argc=<optimized out>, argv=0x7ffea9ef2b38) at emacs.c:1642
 #+END_SRC

***** DONE It is still not known why (require 'misc-utils) in
      CLOSED: [2017-12-12 Tue 20:29]
 lotus-interactivity/packages.el of (lotus-interactivity/post-init-ido)
 is only casing speacemacs to load properly with all features and themes
***** Solve the issue with sessions-unified.el when setting (setq *session-unified-desktop-enabled* nil) not running lotus-enable-desktop-restore-interrupting-feature-hook
         (progn
           (lotus-enable-session-saving-immediately)
           (run-each-hooks 'lotus-enable-desktop-restore-interrupting-feature-hook)
           (message
            "*session-unified-desktop-enabled* %s" *session-unified-desktop-enabled*))

 which is responsible to load many features.
***** HOLD why only loading (require 'misc-uitls) in lotus-interactivity/packages.el cause spacemacs to load properly with themes and packages
      :LOGBOOK:
      - State "HOLD"       from              [2017-12-12 Tue 20:29] \\
        modeline code in elscreen.el trying to access modeline list but while spacemacs load it
        modeline is not a list but a string.
      :END:
***** why loading (require 'misc-uitls) in lotus-interactivity/packages.el cause current-idle-time to get reset very often which now is not seen.
***** Make a unit test code to check current-idle-time behaviour and report it.
***** remove all deh-require's and deh-section's
***** many lotus-*/packages.el lotus-*/config.el  lotus-*/code.el  lotus-*/keybinding.el  requires heavy re-factoring.
***** lotus-remote/packages.el tramp, lotus-interactivity/packages.el ido require heavy re-factoring
***** remove all dependencies of ~/.xemacs/pkgrepos/mypkgs/experimental/*.el
***** lots of lib in ~/.xemacs/pkgrepos/mypkgs/experimental need cleanup
***** remove dependency basic-utils.el misc-utils.el etc from ~/.xemacs/pkgrepos/mypkgs/experimental
***** (dotspacemacs/user-config) in turn (lotus-emacs-user-init-finish) were not getting called without (require 'misc-uitls) in lotus-interactivity/packages.el
***** smartparens-global-mode is not getting loaded without misc-utils

*** Basic (what is left to be working)
**** FEATURES
***** Very fast Interface to add new task which should provide options
****** whether it is subtask of current task or existing task, now required its separate naming, similar way to merge child task to parent.
****** whether it sudden random unrealted task from current task or existing task
****** adding timeout bound task like sleep for 5 mins
****** etc
****** adding new task also try to copy or move property from related task
***** Automatic task heading creation [think more about it.] for perticular events (will be very nice feature.)
***** Add Unnamed task no context matched and no manually clocked in task present. :concept:
****** Criteria for Detection when a New Unnamed task should be created or one of Previous Unnamed tasks should be used will have many details.
****** When an Unnamed task were clocked-in than all events should be recorded in it and in it property drawer like =\
- which all file for what times visited and/or edited,
- which all Code functions was visited and/or edited
- what all mail were read and prepared and sent, and
- what all were the previous tasks,
- etc.
******* activity.el and org-activity.el may need to implemented properly.
This will user help the user to rename and refile this Unnamed task.

****** These should be duly prompted to be renamed and refiled later to correct task
****** Refile interface should have two binding RET to make child of selected heading and M-RET to merge into selected heading.
****** To account offline time, Could add a special Unnamed e.g. "UNNAMED Away from Emacs" from the last seen clock when emacs start and offer to resolve it.
***** When Manually clocked in task detected then context clock and Unnamed task should not interrupt, BUT
it should only remind only that some other task should be clocked in if current context match to some other task OR
if manually clock-in task is detected to be prolonged for long time than also it should remind that may user not working for current task AND
finally after very long time manually clocked-in task should be clocked-out.

***** When adding a task an interface to further break it down in small sub tasks
***** TYPE of task 1. todo 2. simple reminder, 3. event, 4. meeting etc should be accommodated.
- todo
- simple reminder
- event
- meeting
- outsourced

***** Report generation

**** BUGS
***** TODO mini window size coming in less than zero with (org-context-clock-add-context-to-org-heading-when-idle) and (org-clock-lotus-log-note-on-change)
Add test with timer to check what exactly happens when org-clock-lotus-log-note-on-change run from timer
***** TODO BUG Fix when clocked-in is correct matching task, context-clock still offer to choose if multiple task are matching presently.
***** DONE BUG (org-context-clock-add-context-to-org-heading-when-idle) and (org-clock-lotus-log-note-on-change) both tries to capture mini-buffer together :urgent:
      CLOSED: [2017-12-22 Fri 17:23]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2017-12-22 Fri 17:23] \\
        Almost done
      :END:
also include org-resolve-clock-idle
One way to solve is check for active minibuffer before again opening minibuffer

- TODO check what exactly happening
- TODO make a unit test to check it in future.
- TODO synchronize them.

***** TODO correct log-not-on-change not working properly
***** TODO Improve org-clock-lotus-log-not-on-change to use timed out window and not as command-post-hook
***** TODO Improve org-clock-lotus-log-not-on-change detection of proper manual changes, which now do very simple count from tree.
      for this may need to understand undo-tree or may be see any other method to used for it.
      TODO: take printout of undi-tree.el

***** TODO correct org-context-clock-add-context-to-org-heading-when-idle
***** STARTED BUG org-clock-in-if-not should be removed from after-make-frame-functions when no frame left it should not count make-reader-frame
 So normal frame and utilities frame have to distinguished.
***** TODO cleanup lotus-timer-utils timer not working properly and unable to cancel them.
***** TODO Not all ORG file should be considered for time tracking todo, find way to limit them at present lot of unnecessary heading shown for all operation :urgent:
      DEADLINE: <2017-12-23 Sat> SCHEDULED: <2017-12-22 Fri>
      many file are simple data or log, or just for information purpose there is no meaning of TODO
      device a way to limit them.
****** Lot of org file problem Solutions
******* TODO if we want to keep clock-able org file information below directories than we should not put other org file in these directories physically but it could
 kept there using symbolic link files or files in symbolic link directory.
 and here we can simple only consider file actually present physically below directories as clock-able, rest others should be ignored.
******* TODO Think another

***** TODO Believe we should only consider heading without child or node heading for clocking else we should make it configurable. detail
if we go in detail then here may be many thing will come like virtual umbrella heading task with actual children tasks etc.

***** CLOSED join org-context-clock-task-associated-context-key-fns and org-property-set-functions-alist mean join assoc api with org-property-set-functions-alist
      CLOSED: [2017-12-18 Mon 19:28]
      :LOGBOOK:
      - State "CLOSED"     from "TODO"       [2017-12-18 Mon 19:28] \\
        done
      :END:
 So both can be handled at one place, it will stop duplication of code, and here we could support multi-valued property also.

***** CLOSED BUG org-resolve-clock-idle is not getting called
      CLOSED: [2017-12-09 Sat 21:35]
      :LOGBOOK:
      - State "CLOSED"     from "DONE"       [2017-12-15 Fri 22:40]
      :END:
***** CLOSED org-resolve-idle appear many time when idle for multiples of 5 mins
      CLOSED: [2017-12-15 Fri 23:08]
      :LOGBOOK:
      - State "CLOSED"     from "DONE"       [2017-12-17 Sun 17:48] \\
        guess it is fixed now.
      - State "DONE"       from              [2017-12-15 Fri 23:08] \\
        Guess fix will work
      :END:
***** CLOSED correct org-clock-resolve-idle default time is coming more than thousands
      CLOSED: [2017-12-15 Fri 23:08]
      :LOGBOOK:
      - State "CLOSED"     from "DONE"       [2017-12-17 Sun 17:48] \\
        guess it is fixed now.
      - State "DONE"       from              [2017-12-15 Fri 23:08] \\
        Guess fix will work
      :END:
*** Unobtrusive Dynamic Contextual Org Clock
**** BUGS
**** FEATURE
***** DONE Implement dynamic clocking based on mapping of org task property to current file buffer
      CLOSED: [2017-11-18 Sat 20:29]
***** DONE Implement dynamic adding of property to org task
      CLOSED: [2017-11-18 Sat 20:30]
***** STARTED Resolve Idle clock should provide options to clock other task that is with amount of time idle.
      :PROPERTIES:
      :Effort:   7h
      :Root:     ~/.xemacs/elpa/pkgs/org-clock-resolve-advanced/
      :END:
      :LOGBOOK:
      CLOCK: [2017-12-10 Sun 20:02]--[2017-12-10 Sun 20:07] =>  0:05
      CLOCK: [2017-12-08 Fri 17:41]--[2017-12-08 Fri 21:31] =>  3:50
      CLOCK: [2017-12-04 Mon 03:16]--[2017-12-04 Mon 03:25] =>  0:09
      CLOCK: [2017-12-03 Sun 23:44]--[2017-12-03 Sun 23:46] =>  0:02
      CLOCK: [2017-12-03 Sun 18:21]--[2017-12-03 Sun 22:43] =>  4:22
      CLOCK: [2017-11-25 Sat 16:05]--[2017-11-27 Mon 17:25] => 49:20
      CLOCK: [2017-11-20 Mon 21:28]--[2017-11-20 Mon 21:30] =>  0:02
      CLOCK: [2017-11-20 Mon 20:06]--[2017-11-20 Mon 20:11] =>  0:05
      CLOCK: [2017-11-20 Mon 19:21]--[2017-11-20 Mon 19:24] =>  0:03
      CLOCK: [2017-11-19 Sun 14:27]--[2017-11-20 Mon 19:21] => 28:54
      CLOCK: [2017-11-18 Sat 17:00]--[2017-11-18 Sat 23:56] =>  6:56
      CLOCK: [2017-11-18 Sat 16:41]--[2017-11-18 Sat 16:47] =>  0:06
      :END:
***** CLOSED make (org-timed-miniwin-file-loc-with-refile) to use (org-with-new-win)
      CLOSED: [2017-12-15 Fri 18:33]
      :LOGBOOK:
      - State "CLOSED"     from              [2017-12-15 Fri 18:33] \\
        finished, but another new bug appear
      :END:
***** If child tasking is matched than parent task heading should be unmatched.
***** cleanup (org-context-clock-add-context-to-org-heading) so it do not need to handle clean up of WIN which will be done by (org-with-new-win) through (org-timed-miniwin-file-loc-with-refile)
***** org-clock-out should be call when last frame is closed without asking any question it should not count make-reader-frame
***** disable org-context-clocking when when last frame is closed
***** When closing emacs frame along with clock out option it should tell which all frames are still opened.
***** show In matched tasks selection buffer show task rank which was calculated.
***** Find way to specify importance, type(bug, feature etc) of task (whether using tag).
***** When current context do not match current clock than task should be checked out with few options
- to continue for sometime
- or immediately checkout
- or to include current context to current task
- etc
***** One sending mail, chat, or any other important action offer to add log note should be presented.
***** Add method to create task from mail, chat etc and link it SEE DETAIL hint org-capture
 - may be org-capture will help
***** Track/Trace shell actions e.g. change dir, commands run etc, make report for it.
***** Track/Trace browser actions e.g. change url etc, make report for it.
***** Track/Trace any important application actions, make report for it.
 https://github.com/hardaker/elisp-buffer-timer
***** Track/Trace in emacs all major action like changing buffer, saving buffer, opening new file etc
      and integrate with current task and prepare nice report.

***** Improve report preparation
***** Automatically mailing report in time intervals
***** Improve org-capture to automatically pop up in important event and on time intervals
***** WM should also directed to change dir if it were specified in clocked-in task
***** Improve understanding of org-agenda to
***** Try to implement stack pop push based task flow and integrate it also SEE DETAIL
****** possible implementation
 - could copy properties from property drawer to next/previous/parent task, this way it could be easily implemented
***** Try to add unit test using ERT (Emacs Regression Test)
***** On moving to next task, old task should ask to add context, so person can use that context to continue if he restart task after long time.
***** And when starting to restart a task it old context must be showed to remind user what was there.
***** Here should be context feature, at time of leaving office or pausing task, context should be asked and when it is restarted the context will be displayed
***** To implement above here should be some sign-in and sign-off in the day feature, here sign-off will ask to add context for all tasks attempted today
and sign-in will ensure that org-context-clock loaded and working it will also present previous unfinished tasks context to carry on today.
For these we may have to measure that how much time today a task has consumed if it has consumed more than 20 mins then it is entitled to save context for later reference
similar way if more than 5 mins today gone on the task it mean this task is going to be continued, so it context must be shown to user for reminding where it was left.
We may have to track with task whether its context had been shown to user or not.
***** Add note or heading event completion for e.g. sending mail etc.
***** Create a daemon while command and timerange and will ensure that command should be running in that timerange and vice verse
***** define a function, so with task heading it will trigger a pre-define action like opening main file in :root directory and it should be usable in org agenda buffer also.
***** Implementation for clock table report with mail message like or/gnu bug report function do
*** Obtrusive
**** Window should be marked to reappear/popup when something started were done.
e.g. In urxvt we should be able to mark window to reappear when build is done, by that user is browsing or editing or doing some other work.
*** Reminding pending tasks (think about it.)
**** whether use agenda
**** or time to time present remaining unfinished task
**** Categorizing task that can be done on computer, and other which can not done on computer
**** Adding reminder with events like
***** when browsing a sites related tasks will be remined
      same with some other thing etc.
***** when connected to perticular wifi ssid, network etc, remind related tasks.
*** Advanced
**** When asking task estimate time and the expected completion datetime when it claimed to be completed,
     do calculate where all other task estimated time and this task estimated will fit into the expected completion datetime
**** Here should all three kind of estimate pessimistic, pragmatic, optimistic
**** For CPM and PERT how task sequencing as well as hierarchy should be done
1. parent heading should tell all sibling headings will treated as sequential or concurrent flow
2. by default if you see that we take same level list of heading as concurrent
3. if parent heading had not specified flow one default should be assumed.
**** How related task should get it property by copying or moving properties etc.

*** Bookmarks
https://elpa.emacs-china.org/melpa-stable/with-simulated-input-2.1.el
https://github.com/hardaker/elisp-buffer-timer
http://blog.danielgempesaw.com/post/109767231148/using-emacs-for-daily-reminders-to-write-in-my




* Tableview
#+BEGIN: columnview :hlines 1 :id local

#+END:



#+BEGIN: nagora-report :buffer "todo.org/emacs/works/personal" :day 2016-06-22
#+CAPTION: timesheet for day 2016-06-22
|        Time | Customer                        | Task                            | Minutes |
|-------------+---------------------------------+---------------------------------+---------|
| 16:00-17:00 | Tuning my emacs to look like me | Tuning my emacs to look like me |       8 |
| 17:00-18:00 | Tuning my emacs to look like me | Tuning my emacs to look like me |       2 |
| 18:00-19:00 | Tuning my emacs to look like me | Tuning my emacs to look like me |       5 |
|-------------+---------------------------------+---------------------------------+---------|
|       TOTAL |                                 |                                 |      15 |
#+TBLFM: @>$>=vsum(@I..@II)
#+END:

#+BEGIN: columnview  :hlines 1 :id global

#+EN
