# -*- Mode: shell-script; indent-tabs-mode: nil -*-

if [ "${LOGIN_ENV}x" = "x" ]; then
    LOGIN_ENV=LOGIN_ENV

    HOST=`uname -n`

    [ $SHELL = "zsh" ] && emulate sh

    if [ ! -f "${SSH_AUTH_SOCK}" ] ; then
        # export SSH_AUTH_SOCK=""

        # pkill ssh-agent

        if ! pgrep -u $USER ssh-agent > /dev/null 2>&1 ; then
            [  -d $HOME/.ssh ] || mkdir $HOME/.ssh
            eval $(ssh-agent | tee $HOME/.ssh/agent-$HOST)
            trap "kill $SSH_AGENT_PID" 0
        else
            # if [ -r $HOME/.ssh/agent-$HOST ] ; then
            #     . $HOME/.ssh/agent-$HOST > /dev/null
            # fi
        fi
    fi


# if pam_ssh have not created agent then we will rely on keychain.

# if ssh auth forwarding is enabled, use it and dont start keychain

# if df | grep `cat $HOME/.ecryptfs/Private.mnt ` 2>&1 > /dev/null ; then
    # ecryptfs-umount-private         # forget passphrase.

    # if ! ssh-add -l 2>/dev/null && [ "${SSH_AUTH_SOCK}x" = "x" ] && [ "$UID" != "0" ] ; then
    # if [ "${SSH_AUTH_SOCK}x" = "x" ] && [ "$UID" != "0" ] ; then
    if ! ssh-add -l >/dev/null && [ "$UID" != "0" ] ; then

        if which $HOME/bin/ecryptfs-mount-private 2>&1 ; then
            $HOME/bin/ecryptfs-mount-private
            if [ -x /usr/bin/keychain ] ; then

                #/usr/bin/keychain -q -Q --lockwait 1 id_rsa id_dsa

                /usr/bin/keychain -q  \
                    --ignore-missing   \
                    --clear --lockwait 1\
                    --agents gpg,ssh     \
                    --inherit local-once  \
                    $( ls -d1 $HOME/.ssh/login-keys.d/*) \
                    $HOME/.ssh/login-keys.d/id_dsa       \
                    $HOME/.ssh/login-keys.d/id_rsa       \
                    $HOME/.ssh/login-keys.d/internet 070E69E5

        # echo cat $HOME/.keychain/${HOST}-sh >&2
        # cat $HOME/.keychain/${HOST}-sh >&2

                if [ -f $HOME/.keychain/${HOST}-sh ] ; then
                    . $HOME/.keychain/${HOST}-sh
            # echo cat $HOME/.keychain/${HOST}-sh >&2
            # cat $HOME/.keychain/${HOST}-sh >&2
                fi
            fi
            if [ -x /sbin/umount.ecryptfs_private ] ; then
                /sbin/umount.ecryptfs_private
            else
                ecryptfs-umount-private
            fi
        fi
    fi
# fi

# If we have ssh-agent running, forward it to the next host,
# otherwise dont try to use key authentication at all.
    if [ "${SSH_AUTH_SOCK}x" = "x" ] ; then
    # if we dont have an auth sock, dont use pub key identification
        alias ssh='ssh -o PubkeyAuthentication=no'
    else
    # We do have an auth sock, use auth forwarding
        alias ssh='ssh -A'
    fi

    [ "$SHELL" = "zsh" ] && emulate zsh


    [ -r $HOME/.rsetup/login/env.d/${HOST} ] && . $HOME/.rsetup/login/env.d/${HOST}


fi
