#!/bin/zsh


if ! (( ${+RSETUP_LOGIN_RUN} )) ; then
    RSETUP_LOGIN_RUN=done
else
    exit 0;
fi

if [ ! "$SSH_CONNECTION" -a $(id -u) -ne 0 ] ; then # don't open on ssh connection, and when user is root.

    if whence -p amixer >& /dev/null ; then
# Music
## Playback
        amixer -- sset  Master   100% unmute >&/dev/null
        amixer -- sset  PCM      100% unmute >&/dev/null
        amixer -- sset  Speaker       unmute >&/dev/null
        amixer -- sset  Beep     100% unmute >&/dev/null

## Capture
        amixer -- sset 'Front Mic Boost' 0% >&/dev/null
        amixer -- sset 'Mic Boost'       0% >&/dev/null

## Do not know
        amixer -- sset 'Caller ID'   mute >&/dev/null
        amixer -- sset 'Off-hook'    mute >&/dev/null
    fi

    if false
    then
        if [  -e $PRIVATE_DIR ] && [ "x" != "x$DISPLAY" ] ; then
            [ -x $HOME/bin/ecryptfs-mount-private ] &&
                timeout 7 $HOME/bin/ecryptfs-mount-private >&/dev/null
        fi
    fi


    if whence -p remind >& /dev/null &&
       ! pgrep remind   >& /dev/null
    then
    # remind -z1 \
    #     -k"~/bin/popremind %s &" \
    #     ${DOTREMINDERS-$HOME/Documents/CreatedContent/contents/misc/remind/Reminders/init.rem} &!

        if [ -r ${DOTREMINDERS-$HOME/Documents/CreatedContent/contents/misc/remind/Reminders/init.rem} ]
        then
            remind -z1 \
                -k'~/bin/popremind %s &' \
                ${DOTREMINDERS-$HOME/Documents/CreatedContent/contents/misc/remind/Reminders/init.rem} >& /dev/null &!
        fi

    # for testing remind that do not go into daemon mode, try below command
    # remind -aqh -k"~/bin/popremind %s &" ${DOTREMINDERS-~/.Organize/remind/Reminders/init.rem} >& /dev/null

    fi

    if [ "x$DISPLAY" = x ]
    then
        emacs_daemon_start
    fi

    # foreach server (general) {
    #     if [ ! -e ~/.emacs.d/server/${server} ] ||
    #         # do notr delete: timeout [ TIMEOUT ] don't recognize command `command', it is only for zsh
    #    	    ! timeout 7 emacsclient -f ~/.emacs.d/server/${server}  -e '(message "works")'; then
    #         # blow one is not allow gnus to read its ~/.gnus file automatically.
    #         pkill emacs ; EMACS_SERVER_NAME=$server command emacs --daemon=$server
    #     fi
    # }

    if whence leave  >& /dev/null && pgrep leave >& /dev/null
    then
        leave +0800
    fi

    atq
    if [ $(atq | cut -f1 | wc -l) -gt 0 ] ; then
        atrm  $(atq | cut -f1) >& /dev/null
    fi

fi                              # if [ ! "$SSH_CONNECTION" -a $(id -u) -ne 0 ] ; then # don't open on ssh connection, and when user is root.

## updae git if no current change present.
if [ "$SSH_AGENT_PID" ] && ps $SSH_AGENT_PID
then
    if ! command ps f -u $USER | grep -v grep | grep gitwatch
    then
        echo starting new gitwatch $(date) >> ~/.logs/gitwatch.log
        gitwatch -r origin ~/.setup/ >>& ~/.logs/gitwatch.log &!
    fi
fi

__comp=login
__subcomp=run
if [ "x${HOST}" != "x" ] ; then
    if [ -d ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ] ; then
        rm -rf ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

    tdir=$(readlink -m ~/.rsetup/${__comp}/${__subcomp}.d/)
    if [ ! -d $tdir ] ; then
        mkdir -p $tdir
        cat <<'EOF' > $tdir/.gitignore
*
!.stub
!.gitignore
EOF
        unset tdir
    fi
    if [ ! -e ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ] ; then
        cp ~/.rsetup/${__comp}/${__subcomp}.tmpl ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ] ; then
        . ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

else
    echo ${__subcomp} var HOST is not set $HOST
fi
unset __subcomp
unset __comp
