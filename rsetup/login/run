#!/usr/bin/env zsh


if [ ! -d "/tmp/user/$(id -u)" ]
then
    mkdir -p "/tmp/user/$(id -u)"
fi

if ! (( ${+RSETUP_LOGIN_RUN} )) ; then
    RSETUP_LOGIN_RUN=done
else
    exit 0;
fi

if [ ! "$SSH_CONNECTION" -a $(id -u) -ne 0 ] ; then # don't open on ssh connection, and when user is root.

    if whence -p amixer >& /dev/null ; then
# Music
## Playback
        amixer -- sset  Master   100% unmute >&/dev/null
        amixer -- sset  PCM      100% unmute >&/dev/null
        amixer -- sset  Speaker       unmute >&/dev/null
        amixer -- sset  Beep     100% unmute >&/dev/null

## Capture
        amixer -- sset 'Front Mic Boost' 0% >&/dev/null
        amixer -- sset 'Mic Boost'       0% >&/dev/null

## Do not know
        amixer -- sset 'Caller ID'   mute >&/dev/null
        amixer -- sset 'Off-hook'    mute >&/dev/null
    fi

    if false
    then
        if [  -e $PRIVATE_DIR ] && [ "x" != "x$DISPLAY" ] ; then
            [ -x $HOME/bin/ecryptfs-mount-private ] &&
                timeout 7 $HOME/bin/ecryptfs-mount-private >&/dev/null
        fi
    fi


    if whence -p remind >& /dev/null &&
       ! pgrep -u "$(id -u)" remind   >& /dev/null
    then
        if [ -r ${DOTREMINDERS-$HOME/Documents/CreatedContent/contents/misc/remind/Reminders/init.rem} ]
        then
            remind -z1 \
                -k'~/bin/popremind %s &' \
                ${DOTREMINDERS-$HOME/Documents/CreatedContent/contents/misc/remind/Reminders/init.rem} >& /dev/null &!
        fi
    fi

    if [ "x$DISPLAY" = x ]
    then
        if whence -f emacs_daemon_bg_run >& /dev/null
        then
            emacs_daemon_bg_run >/dev/null 2>&1 # already going into ~/.emacs.d/.cache/startup/$server/startup.log
        fi
    fi

    if whence -p leave  >& /dev/null && pgrep -u "$(id -u)" leave >& /dev/null
    then
        leave +0800
    fi

    if whence -p atq >& /dev/null
    then
    atq
    if [ $(atq | cut -f1 | wc -l) -gt 0 ] ; then
        atrm  $(atq | cut -f1) >& /dev/null
    fi
    fi
fi                              # if [ ! "$SSH_CONNECTION" -a $(id -u) -ne 0 ] ; then # don't open on ssh connection, and when user is root.

## improve:
if [ "$SSH_AGENT_PID" ] && command ps h $SSH_AGENT_PID
then
    if ! command ps f -u $USER | grep -v grep | grep gitwatch
    then
        echo starting new gitwatch $(date) >> ~/.logs/gitwatch.log
        gitwatch -r origin ~/.setup/ >>& ~/.logs/gitwatch.log &!
    fi
else
    echo SSH_AGENT_PID not set  $(date) >> ~/.logs/gitwatch.log
    ps >> ~/.logs/gitwatch.log
fi

if whence -p mcron >/dev/null 2>&1 &&
       ! pgrep -u "$(id -u)"  -u $(id -u ) mcron >/dev/null 2>&1
then
    mcron -d -i guile >/dev/null 2>&1 &!
fi

if whence -p shepherd >/dev/null 2>&1 &&
       ! pgrep -u "$(id -u)"  -u $(id -u ) shepherd >/dev/null 2>&1
then
    shepherd --socket="$XDG_RUNTIME_DIR/shepherd/socket" >/dev/null 2>&1 &!
fi

__comp=login
__subcomp=run

if [ "x${HOST}" = "x" ]
then
    HOST=$HOSTNAME
fi
if [ "x${HOST}" != "x" ]
then
    if [ -d ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi
    if [ ! -e ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        cp ~/.rsetup/${__comp}/${__subcomp}.tmpl ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        . ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

else
    echo ${__subcomp} var HOST is not set $HOST
fi
unset __subcomp
unset __comp
