# -*- mode: shell-script; -*-

__comp=eev
__subcomp=env

if [ "x${HOST}" = "x" ]
then
    HOST=$HOSTNAME
    export HOST
fi

if [ "x${HOST}" != "x" ]
then
    __comp=eev

    if [ -d ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/env.d/${HOST}
    fi
    if [ ! -e ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        mkdir -p ~/.setup/osetup/setup/rsetup.d/${__comp}.d/env.d
        cp ~/.rsetup/${__comp}/env.tmpl ~/.rsetup/${__comp}/env.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        . ~/.rsetup/${__comp}/env.d/${HOST}
    fi
    unset __comp
else
    echo env var HOST is not set $HOST
fi



# Beginning of the eev block:
# See: (find-eev "eev-rctool" "new_block_zshrc")
#      (find-eev-update-links)
#
export EEVTMPDIR ;: ${EEVTMPDIR:=~/.eev}
export EE        ;: ${EE:=$EEVTMPDIR/ee.sh}
function ee () { set -v; . $EE$*; set +v; }
#
export EEVDIR    ;: ${EEVDIR:=~/.xemacs/pkgrepos/world/misc/eev-current}
export EEVRCDIR  ;: ${EEVRCDIR:=$EEVDIR/rcfiles}
export EEG       ;: ${EEG:=$EEVTMPDIR/ee.eeg}
export EEGDB     ;: ${EEGDB:=$EEVTMPDIR/ee.gdb}
export EETEX     ;: ${EETEX:=$EEVTMPDIR/ee.tex}
#
export EEC       ;: ${EEC:=$EEVTMPDIR/ee.c}
export EETMPC    ;: ${EETMPC:=$EEVTMPDIR/tmp.c}
export EEAOUT    ;: ${EEAOUT:=$EEVTMPDIR/ee.aout}
function eegcc () {
    cat $EETMPC - > $EEC
    gcc $* -o $EEAOUT $EEC
}
alias eec=$EEAOUT
#
# To define $S and psne uncomment the line below (or copy it,
# uncommented, to outside of the eev block):
#   if [ -e $EEVTMPDIR/psne.sh ]; then . $EEVTMPDIR/psne.sh; fi
# (find-eevtmpfile "psne.sh")
#
# End of the eev block.
