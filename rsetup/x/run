#!/bin/zsh


###!/usr/bin/env zsh
# give access to mpd

# whence -p xrdb &&
# xrdb \
#     -cpp 'm4 -I ~/.Xresources' \
#     -merge ~/.Xresource/init  # should use m4

whence -p xrdb &&
m4 -I ~/.setup/m4 -I ~/.osetup/info/common/m4.d -I ~/.osetup/info/hosts/${HOST}/m4.d -I ~/.Xresources ~/.Xresources/init | xrdb -merge -

whence -p xmodmap &&
xmodmap ~/.Xmodmaps/xmodmaprc-swap-alt-ctrl-caps=alt

xterm -e 'ish -s bash -- timeout -k 120 70 tail -n 100 -f ~/.xsession-errors' &!

if whence xte ; then
    xte <<EOF
mousemove 42 42
EOF
fi


if which $HOME/bin/ecryptfs-mount-private 2>&1 ; then

    if [  -e $PRIVATE_DIR ] && [ "x" != "x$DISPLAY" ] ; then
        timeout -k 10 7 $HOME/bin/ecryptfs-mount-private
    fi
fi


~/bin/syncimap -r               # it only get secinfo from x keyring; enable

whence -p xhost && xhost +local:mpd



if [ $DISPLAY ] ; then
    :
# Why don't the message windows disappear?
# mit-clx, used with clisp, doesn't support timeouts. Use new-clx
# instead. Alternatively, the problem can be worked around by
# periodically sending meaningless X events, thereby breaking
# mit-clx's blocking read and returning control to StumpWM (to do
# things like unmap those message windows.)
# Put the following in your ~/.xinitrc file, before the call to stumpwm:
    # if [[ $WM -eq "stumpwm" ]] ; then
    #     (while sleep 1; do xprop -root -f FOO 8s -set FOO foo; done )&
    # fi
fi

if [ $DISPLAY ] ; then

    # which  gnubiff &&  gnubiff  -n &
    # xmodmap ~/.xmodmaprc	# excellent, why i was not knowing it before.

    # unset Caps Lock
    python -c 'from ctypes import *; X11 = cdll.LoadLibrary("libX11.so.6"); display = X11.XOpenDisplay(None); X11.XkbLockModifiers(display, c_uint(0x0100), c_uint(2), c_uint(0)); X11.XCloseDisplay(display)'

    if whence -p xmodmap ; then
        if [ -e ~/.xmodmaprc  ] ; then
            xmodmap ~/.xmodmaprc
        else
            xmodmap ~/.Xmodmaps/xmodmaprc-swap-alt-ctrl-caps=alt
        fi
    fi

    whence -p urxvtd >& /dev/null &&
    pgrep urxvtd >& /dev/null ||
     urxvtd \
        --quiet \
        --opendisplay \
        --fork &!

    # DISPLAY=:0 dbus-launch --autolaunch=$MY_DBUS_SESSION empathy &!

    whence -p conky >& /dev/null &&
    pgrep conky >& /dev/null ||
    conky &!

    whence synclient >& /dev/null &&
    pgrep synclient >& /dev/null ||
    synclient  TapButton1=1

    # whence -p xmodmap &&
    # xmodmap ~/.Xmodmaps/xmodmaprc-swap-alt-ctrl-caps=alt

    # stop this bell.
    whence -p xset && xset b off                  # peace

    # set fonts
    if [  -r ~/.emacs.d/server/general ] ; then
        # emacsclient -n -d $DISPLAY -f ~/.emacs.d/server/general -e '(mycustom-face-set)'
    fi


    whence -p osdsh >& /dev/null &&
    pgrep osdsh >& /dev/null ||
    osdsh -n 10 &!



fi

if [ -e ~/.stumpwm.d/debug-output.log ] ; then
    # command rm -f ~/.stumpwm.d/debug-output.log
    if [ -e ~/.stumpwm.d/debug-output.0.log ] ; then
        command mv ~/.stumpwm.d/debug-output.0.log ~/.stumpwm.d/debug-output.1.log
    fi
    command mv ~/.stumpwm.d/debug-output.log ~/.stumpwm.d/debug-output.0.log
fi


# gconftool -s /apps/mail-notification/commands/new-mail/command "$EDITOR -e '(gnus)'"
# gconftool -s /apps/mail-notification/commands/new-mail/enabled true


__comp=x


if [ -d ~/.rsetup/${__comp}/run.d/${HOST} ] ; then
    rm -rf ~/.rsetup/${__comp}/run.d/${HOST}
fi
if [ ! -x ~/.rsetup/${__comp}/run.d/${HOST} ] ; then
    mkdir ~/.rsetup/${__comp}/run.d/
    cp ~/.rsetup/${__comp}/run.tmpl ~/.rsetup/${__comp}/run.d/${HOST}
fi

if [ -r ~/.rsetup/${__comp}/run.d/${HOST} ] ; then
    ~/.rsetup/${__comp}/run.d/${HOST}
fi

unset __comp
