# -*- mode: shell-script; -*-


EDITOR='emacsclient -t -c -f ~/.emacs.d/server/general '
VISUAL='emacsclient -t -c -f ~/.emacs.d/server/general '

if [ "x${REMOTEEDITORHOST}" != "x" ]
then
    EDITOR=$HOME/bin/rgeneral-editor
else
    EDITOR=$HOME/bin/general-editor
fi

VISUAL=$EDITOR

BROWSER=w3m

export EDITOR
export VISUAL
export BROWSER
SSH_KEYS_DIR=$HOME/.ssh/login-keys.d
export SCREEN4KEYCHAIN=keychain
# export KEYCHAINDIR=$HOME/.keychain-screen
# this is for interactive shell, not for login shell which could be invoke ssh-agent already.
export KEYCHAINDIR=$HOME/.keychain-screen

MACHINE_ID=/var/lib/dbus/machine-id

if [ "x$DISPLAY" != "x" ]
then
   _DISPLAYMAJOR=$(echo ${DISPLAY} | cut -f2 -d: | cut -d. -f1)
   if [ -r "$MACHINE_ID" ] && [ -r ~/.dbus/session-bus/$(cat "$MACHINE_ID" )-${_DISPLAYMAJOR} ]
   then
      source ~/.dbus/session-bus/$(cat "$MACHINE_ID" )-${_DISPLAYMAJOR}
      export DBUS_SESSION_BUS_ADDRESS
      unset _DISPLAYMAJOR
   fi
else
    if [ -r "$MACHINE_ID" ] && [ -r ~/.dbus/session-bus/$(cat "$MACHINE_ID" )-0 ]
    then
      source ~/.dbus/session-bus/$(cat "$MACHINE_ID" )-0
      export DBUS_SESSION_BUS_ADDRESS
      unset _DISPLAYMAJOR
   fi

fi

function update-ssh-agent-unconditionally()
{
    if [ "x${SSH_AGENT_PID}" != "x" -a "x${SSH_AUTH_SOCK}" != "x" ] && # ssh-agent pid is not set
        ps ${SSH_AGENT_PID} >/dev/null 2>&1                         && # if pid is set and working alive ssh-agent process.
        [ "$(basename $(\ps hc -ocmd $SSH_AGENT_PID  | cut -f1 -d' '  ))" = ssh-agent ]
    then
        if ! ssh-add -l >/dev/null 2>&1
        then
            if [ $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' | wc -l ) -ne 0 ]
            then
                if [ -t ]
                then
                    ssh-add $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' )
                else
                    ssh-add $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' ) </dev/null
                fi
            fi
        fi
    else
        if [ -f ${KEYCHAINDIR}/${HOST}-sh ]
        then
            . ${KEYCHAINDIR}/${HOST}-sh

            if  [ "x${SSH_AGENT_PID}" != "x" -a "x${SSH_AUTH_SOCK}" != "x" ] && # ssh-agent pid is set
                ps ${SSH_AGENT_PID} >/dev/null 2>&1                         && # if pid is set and working alive ssh-agent process.
                [ "$(basename $(\ps hc -ocmd $SSH_AGENT_PID  | cut -f1 -d' '  ))" = ssh-agent ]
            then
                if ! ssh-add -l >/dev/null 2>&1                                # key is not added
                then
                    if [ $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' | wc -l ) -ne 0 ]
                    then
                        if [ -t ]
                        then
                            ssh-add $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' )
                        else
                            ssh-add $(command ls -d1 $SSH_KEYS_DIR/* | egrep -v '.pub$' ) </dev/null
                        fi
                    fi
                fi
            else
                unset SSH_AGENT_PID
                unset SSH_AUTH_SOCK
                rm -f ${KEYCHAINDIR}/${HOST}-sh
            fi          # if  [ "x${SSH_AGENT_PID}" != "x" -a "x${SSH_AUTH_SOCK}" != "x" ]
        fi              # if [ -f ${KEYCHAINDIR}/${HOST}-sh ]
    fi  # if [ "x${SSH_AGENT_PID}" != "x" -a "x${SSH_AUTH_SOCK}" != "x" ] && # ssh-agent pid is not set
}

function update-ssh-agent()
{
    if [ $# -gt 0 ]
    then
      __force=0
    else
      __force=1
    fi

    ssh-add -l >/dev/null 2>&1
    if [ $? -gt $__force ]
    then
        update-ssh-agent-unconditionally              # use it when required.
        ssh-add -l
    fi
    unset __force
}

update-ssh-agent                # use it when required.

__comp=rc
__subcomp=env
if [ "x${HOST}" != "x" ]
then
    if [ -d ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

    tdir=$(readlink -m ~/.rsetup/${__comp}/${__subcomp}.d/)
    if [ ! -d $tdir ]
    then
        mkdir -p $tdir
        cat <<'EOF' > $tdir/.gitignore
*
!.stub
!.gitignore
EOF
        unset tdir
    fi
    if [ ! -e ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        cp ~/.rsetup/${__comp}/${__subcomp}.tmpl ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/${__subcomp}.d/${HOST} ]
    then
        . ~/.rsetup/${__comp}/${__subcomp}.d/${HOST}
    fi

else
    echo ${__subcomp} var HOST is not set $HOST
fi
unset __subcomp
unset __comp

unset MACHINE_ID
