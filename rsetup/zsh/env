# -*- mode: shell-script; -*-

if [ "x${HOST}" = "x" ]
then
    HOST=$HOSTNAME
fi
if [ "x${HOST}" != "x" ]
then
    __comp=zsh

    if [ -d ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/env.d/${HOST}
    fi

    if [ ! -e ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        mkdir -p ~/.rsetup/${__comp}/env.d/
        cp ~/.rsetup/${__comp}/env.tmpl ~/.rsetup/${__comp}/env.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/env.d/${HOST} ]
    then
        . ~/.rsetup/${__comp}/env.d/${HOST}
    fi

    unset __comp
else
    echo env var HOST is not set $HOST
fi



function warnif () {

}




function workoffice () {
    if ((${+WORKPLACE})) ; then
        if [  -d ~/.opt/p/$WORKPLACE ] ; then
            source ~/.opt/p/$WORKPLACE/env
            ~/.opt/p/$WORKPLACE/run
        else
            echo ~/.opt/p/$WORKPLACE directory  do not exits. 2>&1
        fi
    else
        echo WORKPLACE is not set. 2>&1
    fi
}

#{{ http://wroot.org/posts/terminal-auto-lock-with-zsh-and-vlock/
if whence -p vlock > /dev/null ; then
    export TMOUT=600
    function TRAPALRM() {
        if ! pgrep xtrlock >& /dev/null && [ "$TERM" = "linux" ] ; then
            print Going to lock terminal
            vlock
            print Unlocked the terminal
        # else
        #     print X is already locked. >& /dev/null
        fi
    }
fi
#}}
